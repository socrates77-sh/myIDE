L 1					; C Compiler for MC68HC05 (COSMIC Software)
L 2					; Generator V4.1n - 19 Jul 2001
L 3					; Optimizer V4.1n - 19 Jul 2001
L 4					; 3 @interrupt void SWI_ISR(void)
L 5					; 4 {
L 6						xref.b	_SWI_ISR.L
L 7						switch	.text
L 8					1003               _SWI_ISR:
L 9					; 5 }
L 10	[1]	1003	80            	rti	
L 11					; 7 @interrupt void INT1_ISR(void)
L 12					; 8 {
L 13						xref.b	_INT1_ISR.L
L 14						switch	.text
L 15					1004               _INT1_ISR:
L 16					; 10 }
L 17	[1]	1004	80            	rti	
L 18					; 12 @interrupt void PWMINT_ISR(void)
L 19					; 13 {
L 20						xref.b	_PWMINT_ISR.L
L 21						switch	.text
L 22					1005               _PWMINT_ISR:
L 23					; 15 }
L 24	[1]	1005	80            	rti	
L 25					; 16 @nosvf @interrupt void T0INT_ISR(void)
L 26					; 17 {		
L 27						xref.b	_T0INT_ISR.L
L 28						switch	.text
L 29					1006               _T0INT_ISR:
L 30					; 19 }
L 31	[1]	1006	80            	rti	
L 32					; 21 @interrupt void INT0_ISR(void)
L 33					; 22 {
L 34						xref.b	_INT0_ISR.L
L 35						switch	.text
L 36					1007               _INT0_ISR:
L 37					; 24 }
L 38	[1]	1007	80            	rti	
L 39					; 4   void funtion001(unsigned char aa,unsigned char bb)
L 40					; 5   {
L 41						xref.b	_funtion001.L
L 42						switch	.text
L 43					1008               _funtion001:
L 44					; 8     if(aa==bb)
L 45	[1]	1008	b136          	cmp	_funtion001.L+1
L 46	[1]	100a	2605          	bne	L1021
L 47					; 10         P0=0xff;
L 48	[1]	100c	a6ff          	lda	#255
L 49	[1]	100e	b710          	sta	_p0
L 50	[1]	1010	81            	rts	
L 51					1011               L1021:
L 52					; 14         P0=0x00;
L 53	[1]	1011	3f10          	clr	_p0
L 54					; 15   }
L 55	[1]	1013	81            	rts	
L 56					; 8 void initial()
L 57					; 9 {
L 58						switch	.text
L 59					1014               _initial:
L 60					; 10     SEI(); //disable enterrupt 
L 61	[1]	1014	9b            	sei	
L 62					; 12     P0CONH=0b10101010; //p07--p04 use for output
L 63	[1]	1015	a6aa          	lda	#170
L 64	[1]	1017	b716          	sta	_p0conh
L 65					; 13     P0CONL=0xaa;
L 66	[1]	1019	b717          	sta	_p0conl
L 67					; 14     P0=0xff;
L 68	[1]	101b	a6ff          	lda	#255
L 69	[1]	101d	b710          	sta	_p0
L 70					; 15     WDTE=0x0a;
L 71	[1]	101f	b60c          	lda	_btcon
L 72	[1]	1021	a40f          	and	#15
L 73	[1]	1023	aaa0          	ora	#160
L 74	[1]	1025	b70c          	sta	_btcon
L 75					; 17 }
L 76	[1]	1027	81            	rts	
L 77					; 19 void main(void)
L 78					; 20 {
L 79						xref.b	_main.L
L 80						switch	.text
L 81					1028               _main:
L 82					; 22     RSP(); //只能在主程序中清，调用子程序中不能清堆栈指针，否则含数将无法返回。
L 83	[1]	1028	9c            	rsp	
L 84					; 23     initial();
L 85	[1]	1029	ade9          	jsr	_initial
L 86					102b               L3321:
L 87					; 27         a++;
L 88	[1]	102b	3c34          	inc	_main.L-1
L 89					; 28         funtion001(4,4);
L 90	[1]	102d	a604          	lda	#4
L 91	[1]	102f	b736          	sta	_funtion001.L+1
L 92	[1]	1031	add5          	jsr	_funtion001
L 93					; 29         P0=~P0;
L 94	[1]	1033	3310          	com	_p0
L 95	[1]	1035	20f4          	bra	L3321
L 96						xdef	_main
L 97						xdef	_initial
L 98						xdef	_funtion001
L 99						xdef	_INT0_ISR
L 100						xdef	_T0INT_ISR
L 101						xdef	_PWMINT_ISR
L 102						xdef	_INT1_ISR
L 103						xdef	_SWI_ISR
L 104						xref.b	_funtion001.L
L 105						end
