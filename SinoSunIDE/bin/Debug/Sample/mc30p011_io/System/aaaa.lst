gpasm-0.9.0 (Mar 19 2013)    G:\Emulator\IDE\WinScopeIDE_v0.05bt_20130528\Sample\aaaa\aaaa.asm2013-6-19  16:56:28          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 #include mc30p011.inc
                      00001         LIST
                      00002 ;MC30P01A.INC  Standard Header File, Version 1.00 by Sinomcu
                      00190         LIST
                      00002 
                      00003 #define    RAM_COUNT    48    ;48个RAM
                      00004 #define    FIR_RAM_ADDR    0x10    ;RAM首地址
                      00005 
                      00006 #define    RAM_E    0x00        ;RAM错误报E0
                      00007 ;***************特殊RAM***********
  00000007            00008 R0    equ    0x07
  00000041            00009 T0DATA    equ    0x41
  00000045            00010 DDR0    equ    0x45
  00000046            00011 DDR1    equ    0x46
                      00012 
                      00013 #define    IO_TM1628_STB    P0,0
                      00014 #define    IO_TM1628_CLK    P0,1
                      00015 #define    IO_TM1628_DATA    P0,2
                      00016 #define    IO_TM1628_DDR    DDR0,2
                      00017 ;*************ram****************
                      00018 cblock    0x00
                      00019 acc_temp
                      00020 status_temp
                      00021 r1
                      00022 r2
                      00023 work_flag1
                      00024 work_flag2
                      00025 error_flag
                      00026 
                      00027 time_125us
                      00028 time_1ms
                      00029 time_10ms
                      00030 time_100ms
                      00031 time_1s
                      00032 time_1min
                      00033 time_1hour
                      00034 
                      00035 dis_buffer0
                      00036 dis_buffer1
                      00037 dis_buffer2
                      00038 dis_buffer3
                      00039 tm_data0
                      00040 tm_data1
                      00041 tm_data2
                      00042 tm_data3
                      00043 tm_data4
                      00044 tm_data5
                      00045 tm_data6
                      00046 tm_data7
                      00047 key_data_buffer0
                      00048 key_data_buffer1
                      00049 key_data_buffer2
                      00050 key_data_buffer3
                      00051 key_data_buffer4
                      00052 endc
                      00053 ;***************end ram*************
                      00054 #define    dis_buffer4    tm_data4
                      00055 #define    dis_buffer5    tm_data5
                      00056 #define    dis_buffer6    tm_data6
                      00057 #define    dis_buffer7    tm_data7
                      00058 #define    disp0_point    tm_data0,4
                      00059 #define    disp1_point    tm_data1,4
                      00060 #define    disp2_point    tm_data2,4
                      00061 #define    disp3_point    tm_data3,4
                      00062 #define    key_data1    key_data_buffer0,0    ;k1
                      00063 #define    key_data2    key_data_buffer0,3    ;k2
                      00064 #define    key_data3    key_data_buffer3,0    ;k3
                      00065 
                      00066 #define flag_time_10ms         work_flag1,0
                      00067 #define flag_key1_effect    work_flag1,1
                      00068 #define flag_key2_effect    work_flag1,2
                      00069 #define flag_key3_effect    work_flag1,3
                      00070 #define flag_key1_effect_bak    work_flag1,4
                      00071 #define flag_key2_effect_bak    work_flag1,5
                      00072 #define flag_key3_effect_bak    work_flag1,6
                      00073 
                      00074 #define    flag_disp0_point    work_flag2,0
                      00075 #define    flag_disp1_point    work_flag2,1
                      00076 #define    flag_disp2_point    work_flag2,2
                      00077 #define    flag_disp3_point    work_flag2,3
                      00078 
                      00079     org     0x3ff        ;复位向量
03FF   2800           00080  goto   start
                      00081      ;bclr    GIE    ;关中断
                      00082     org     0x00
0000   2800           00083     goto    start
0001   0000           00084     nop         ;0001H
0002   0000           00085     NOP         ;0002H
                      00086     
                      00087 ;    org     0x002        ;软中断向量
                      00088 ;    movra    acc_temp    ;02
                      00089 ;    movar    STATUS        ;03
                      00090 ;    movra    status_temp    ;04
                      00091 ;
                      00092 ;    goto    soft_interrupt    ;07
                      00093 
                      00094     ORG 0x08        ;其它中断向量
0008                  00095 interrupt_sub:
0008   1580           00096     movra    acc_temp
0009   1603           00097     movar    STATUS
000A   1581           00098     movra    status_temp
                      00099 ;*******判断是哪个中断*****
000B                  00100 start_just_int:
000B   300F           00101     jbset    T0IF
000C   2800           00102     goto    just_int0
                      00103 ;**********timer0**********
000D   3C0F           00104     bclr    T0IF
000E   1987           00105     incr    time_125us
000F   3187           00106     jbset    time_125us,3
0010   2800           00107     goto    end_time0_interrupt
0011   1D87           00108     clrr    time_125us
0012   1988           00109     incr    time_1ms
0013   1608           00110     movar    time_1ms
                      00111     ;subai    10        ;10-acc
0014   3503           00112     jbclr    Z
0015   2800           00113     goto    end_time0_interrupt
0016   1D88           00114     clrr    time_1ms
0017   3804           00115     bset    flag_time_10ms
0018                  00116 end_time0_interrupt:
                      00117 ;**********end_time0*******
0018                  00118 just_int0:
0018   310F           00119     jbset    INT0IF
0019   2800           00120     goto    just_kbim
                      00121 ;**********int0************
001A   3D0F           00122     bclr    INT0IF
                      00123 ;*********end int0*********
001B                  00124 just_kbim:
001B   308F           00125     jbset    KBIF
001C   2800           00126     goto    end_just_int
                      00127 ;**********kbim************
001D   3D0F           00128     bclr    INT0IF
                      00129 ;**********end_kbim********
001E                  00130 end_just_int:
001E   160F           00131     movar    INTF
001F   0D07           00132     andai    0x07        ;低三位
0020   3403           00133     jbclr    C
0021   2800           00134     goto    start_just_int
0022                  00135 exit_interrupt:
0022   1601           00136     movar    status_temp
0023   1583           00137     movra    STATUS
0024   1600           00138     movar    acc_temp
0025   000D           00139     retie
                      00140 ;;*******软中断代码***********
                      00141 ;soft_interrupt:
                      00142 ;    movar    status_temp
                      00143 ;    movra    STATUS
                      00144 ;    movar    acc_temp
                      00145 ;    retie
                      00146 
                      00147 ;*******程序开始*************
                      00148 ;*********start***************
0026                  00149 start:
0026   3F88           00150     bclr    WDTEN        ;关看门狗
0027   3F08           00151     bclr    EIS
0028   15C1           00152  movra T0DATA
                      00153  ;goto ram_error
0029                  00154 clr_ram:
0029   0B55           00155      movai    0x55
002A   1587           00156     movra    R0        ;07地址也开放给用户
002B   0000           00157     nop
002C   1607           00158     movar    R0
                      00159  ;   nop
                      00160     ;    nop
                      00161     ; subai    0xff
                      00162   ;bclr C
002D   3003           00163     jbset    C
002E   2800           00164     goto    ram_error
002F   1D87           00165     clrr    R0
0030   0000           00166     nop
0031   1607           00167     movar    R0
                      00168  ;BCLR C
0032   3003           00169     jbset    C
0033   2800           00170     goto    ram_error
                      00171     ;goto    ram_error
0034   0B10           00172     movai    FIR_RAM_ADDR
0035   1584           00173     movra    FSR        ;首地址
0036   0B30           00174     movai    RAM_COUNT
0037   1587           00175     movra    R0
0038                  00176 clr_ram_loop:
0038   0BFF           00177     movai    0xff
0039   1580           00178     movra    INDF        ;把FF写到FSR所指的地址
003A   0000           00179     nop
003B   1600           00180     movar    INDF        ;写完后读出来
                      00181     ; subai    0xff
003C   3103           00182     jbset    Z        ;读出来后如果是FF，相减后为0，Z为1
003D   2800           00183     goto    ram_error    ;先写FF
                      00184 
003E   1980           00185     incr    INDF
003F   1600           00186     movar    INDF        ;0xff+1后为0
0040   3103           00187     jbset    Z
0041   2800           00188     goto    ram_error    ;若不为0则是出错
                      00189 
0042   1984           00190     incr    FSR        ;FSR指向下一个地址
0043   1A87           00191     djzr    R0        ;R0-1==0则跳过一行
0044   2800           00192     goto    clr_ram_loop
0045   2800           00193     goto    sys_init
0046                  00194 ram_error:
0046   1600           00195     movar    RAM_E
0047   1586           00196     movra    error_flag
                      00197 ;*****************************************
0048                  00198 sys_init:
0048   0B01           00199     movai    1    ;8M,2T,4分频
0049   15C1           00200     movra    T0DATA        ;写入T0CR 
004A   0B83           00201     movai    (256-125)
004B   1581           00202     movra    T0CNT    ;定时125us
004C   380E           00203     bset    T0IE    ;开定时中断
                      00204 
004D   1DC5           00205     clrr    DDR0
004E   1DC6           00206     clrr    DDR1    ;全部作为输入口
004F   1D85           00207     clrr    P0
0050   1D86           00208     clrr    P1
                      00209 ;***************************************
0051   000E           00210     clrwdt
0052   3B88           00211     bset    WDTEN
0053   3B8E           00212     bset    GIE    ;开全局中断
                      00213 ;************main loop***************
0054                  00214 main_loop:
0054   000E           00215     clrwdt
0055   2000           00216     call    time_deal
0056   2000           00217     call    tm_1628_read_sub    ;读按键
0057   2000           00218     call    key_scan        ;整理读回来的按键数据
0058   2000           00219     call    key_deal        ;按键处理
0059   2000           00220     call    work_deal
005A   2000           00221     call    display
005B   2000           00222     call    tm_1628_write_sub    ;写显示数据
005C   2800           00223     goto    main_loop
                      00224 ;************time sub*************
005D                  00225 time_deal:
005D   3004           00226     jbset    flag_time_10ms
005E   2800           00227     goto    end_time_deal
005F   3C04           00228     bclr    flag_time_10ms
0060   1989           00229     incr    time_10ms
0061                  00230 end_time_deal:
0061   000C           00231     return
                      00232 ;************key_scan*************
0062                  00233 key_scan:
                      00234 ;**********k1***********
0062                  00235 scan_key1
0062   301A           00236     jbset    key_data1
0063   2800           00237     goto    clr_key1_bak
                      00238     
0064   3484           00239     jbclr    flag_key1_effect
0065   2800           00240     goto    scan_key2
                      00241 
0066   3884           00242     bset    flag_key1_effect
0067   3A04           00243     bset    flag_key1_effect_bak
0068   2800           00244     goto    scan_key2
0069                  00245 clr_key1_bak:
0069   3E04           00246     bclr    flag_key1_effect_bak
                      00247 ;**********k2************
006A                  00248 scan_key2:
006A   319A           00249     jbset    key_data2
006B   2800           00250     goto    clr_key2_bak
                      00251     
006C   3504           00252     jbclr    flag_key2_effect
006D   2800           00253     goto    scan_key3
                      00254 
006E   3904           00255     bset    flag_key2_effect
006F   3A84           00256     bset    flag_key2_effect_bak
0070   2800           00257     goto    scan_key3
0071                  00258 clr_key2_bak:
0071   3E84           00259     bclr    flag_key2_effect_bak
                      00260 ;**********k3************
0072                  00261 scan_key3:
0072   301D           00262     jbset    key_data3
0073   2800           00263     goto    clr_key3_bak
                      00264     
0074   3584           00265     jbclr    flag_key3_effect
0075   2800           00266     goto    end_key_scan
                      00267 
0076   3984           00268     bset    flag_key3_effect
0077   3B04           00269     bset    flag_key3_effect_bak
0078   2800           00270     goto    end_key_scan
0079                  00271 clr_key3_bak:
0079   3F04           00272     bclr    flag_key3_effect_bak
007A                  00273 end_key_scan:
007A   000C           00274     return
                      00275 ;***********key_deal**************
007B                  00276 key_deal:
007B                  00277 end_key_deal:
007B   000C           00278     return
                      00279 ;***********work sub**************
007C                  00280 work_deal:
007C                  00281 end_work_deal:
007C   000C           00282     return
                      00283 ;********************************
007D                  00284 display:
                      00285 ;*************查表开始***************
007D   1D87           00286     clrr    R0                ;计数4次
007E                  00287 load_table_loop:
007E   0B0E           00288     movai    dis_buffer0
007F   1F07           00289     addar    R0
0080   1584           00290     movra    FSR                ;每次循环更新一次FSR指针
                      00291     
0081   1600           00292     movar    INDF        
0082   0B01           00293     movai    0x01                
0083   2000           00294     call    table_dis_code
0084   1582           00295     movra    r1                ;r1存放查表的临时值
0085   0B12           00296     movai    dis_buffer0+4
0086   1F07           00297     addar    R0
0087   1584           00298     movra    FSR
0088   1602           00299     movar    r1
0089   1580           00300     movra    INDF                ;把查表值（r1）存储到tm_data中
                      00301 
008A   1987           00302     incr    R0
008B   3107           00303     jbset    R0,2
008C   2800           00304     goto    load_table_loop
                      00305 
                      00306 ;*************小数点的显示************
008D   3405           00307     jbclr    flag_disp0_point
008E   3A12           00308     bset    disp0_point
008F   3485           00309     jbclr    flag_disp1_point
0090   3A13           00310     bset    disp1_point
0091   3505           00311     jbclr    flag_disp2_point
0092   3A14           00312     bset    disp2_point
0093   3585           00313     jbclr    flag_disp3_point
0094   3A15           00314     bset    disp3_point
                      00315 ;***************其它段的显示处理*********
0095                  00316 end_display
0095   000C           00317     return
                      00318 
                      00319 ;***************1628读按键数据************
0096                  00320 tm_1628_read_sub:
0096   0B1A           00321     movai    key_data_buffer0
0097   1584           00322     movra    FSR
                      00323 
0098   0B05           00324     movai    5    ;循环5次
0099   1583           00325     movra    r2
                      00326 
009A   0B42           00327     movai    0x42
009B   1582           00328     movra    r1
009C   2000           00329     call    tm_1628_write
009D                  00330 tm1628_read_key_loop:
009D   2000           00331     call    tm_1628_read
009E   1602           00332     movar    r1
009F   1580           00333     movra    INDF
                      00334      
00A0   1984           00335     incr    FSR
00A1   1A83           00336     djzr    r2
00A2   2800           00337     goto    tm1628_read_key_loop
00A3                  00338 end_tm_1628_read:
00A3   000C           00339     return
                      00340 ;***********1628 写显示数据***************
00A4                  00341 tm_1628_write_sub:
00A4   0B03           00342     movai    0x03
00A5   1582           00343     movra    r1
00A6   2000           00344     call    tm_1628_write
00A7   3805           00345     bset    IO_TM1628_STB
00A8   0B40           00346     movai    0x40
00A9   1582           00347     movra    r1
00AA   2000           00348     call    tm_1628_write
00AB   3805           00349     bset    IO_TM1628_STB
00AC   0BC0           00350     movai    0xc0
00AD   1582           00351     movra    r1
00AE   2000           00352     call    tm_1628_write
00AF   0B12           00353     movai    tm_data0            ;首地址
00B0   1584           00354     movra    FSR
00B1   1D83           00355     clrr    r2                ;r2计算发送buffer的次数
00B2                  00356 send_display_buffer:
00B2   1600           00357     movar    INDF
00B3   1582           00358     movra    r1
00B4   2000           00359     call    tm_1628_write
00B5   2000           00360     call    tm_1628_write
00B6   1984           00361     incr    FSR
00B7   1983           00362     incr    r2
00B8   3183           00363     jbset    r2,3                ;够八次就跳出
00B9   2800           00364     goto    send_display_buffer
                      00365 
00BA   3805           00366     bset    IO_TM1628_STB
00BB   0B88           00367     movai    0x88
00BC   1582           00368     movra    r1
00BD   2000           00369     call    tm_1628_write
00BE   3805           00370     bset    IO_TM1628_STB
00BF                  00371 end_tm_1628_write:
00BF   000C           00372     return
                      00373 ;*********************************
                      00374 ;***************1628***************
                      00375 ;*********占用r1,R0寄存器***********
                      00376 ;*********r1作为参数****************
00C0                  00377 tm_1628_write:
00C0   3C05           00378     bclr    IO_TM1628_STB
00C1   3945           00379     bset    IO_TM1628_DDR    ;data output
00C2   1D87           00380     clrr    R0        ;计数用
00C3   3987           00381     bset    R0,3        ;R0=8
00C4                  00382 tm1628_send_data_loop:
00C4   3D05           00383     bclr    IO_TM1628_DATA
00C5   3C85           00384     bclr    IO_TM1628_CLK
                      00385 
00C6   3402           00386     jbclr    r1,0        ;发送0位数据
00C7   3905           00387     bset    IO_TM1628_DATA
00C8                  00388 tm1628_clk_rising:
00C8   1382           00389     rrr    r1
00C9   0000           00390     nop
00CA   0000           00391     nop
00CB   0000           00392     nop
00CC   0000           00393     nop
00CD   0000           00394     nop
00CE   3885           00395     bset    IO_TM1628_CLK
00CF   1A87           00396     djzr    R0
00D0   2800           00397     goto    tm1628_send_data_loop
00D1   000C           00398     return
                      00399 
00D2                  00400 tm_1628_read:
00D2   3C05           00401     bclr    IO_TM1628_STB
00D3   3D45           00402     bclr    IO_TM1628_DDR    ;data input
00D4   1D87           00403     clrr    R0        ;计数用
00D5   3987           00404     bset    R0,3        ;R0=8
00D6                  00405 tm1628_receive_data_loop:
00D6   3C85           00406     bclr    IO_TM1628_CLK
00D7   0000           00407     nop
00D8   0000           00408     nop
00D9   0000           00409     nop
00DA   3C03           00410     bclr    C
00DB   3505           00411     jbclr    IO_TM1628_DATA
00DC   3803           00412     bset    C
00DD   1382           00413     rrr    r1
00DE   3885           00414     bset    IO_TM1628_CLK
00DF   1A87           00415     djzr    R0
00E0   2800           00416     goto    tm1628_receive_data_loop
00E1   000C           00417     return
                      00418 ;**********************************
00E2                  00419 table:
                      00420     org (0x3fe-18)
03EC   0A40           00421     retai    0x40
03ED   0A00           00422     retai    0x00
03EE   0AC5           00423     retai    0xC5
03EF   0ACD           00424     retai    0xCD
03F0   0A6E           00425     retai    0x6E
03F1   0A8D           00426     retai    0x8D
03F2   0A6D           00427     retai    0x6D
03F3   0AE7           00428     retai    0xE7
03F4   0AEB           00429     retai    0xEB
03F5   0AEF           00430            retai    0xEF
03F6   0AA2           00431     retai    0xA2
03F7   0AED           00432     retai    0xED
03F8   0AE9           00433     retai    0xE9
03F9   0A63           00434     retai    0x63
03FA   0AEA           00435     retai    0xEA
03FB   0ACE           00436     retai    0xCE
03FC   0A22           00437     retai    0x22
03FD   0AAF           00438     retai    0xAF
                      00439     org    0x3fe
03FE                  00440 table_dis_code:
                      00441     ;subra    PCL
                      00442     end
gpasm-0.9.0 (Mar 19 2013)    G:\Emulator\IDE\WinScopeIDE_v0.05bt_20130528\Sample\aaaa\aaaa.asm2013-6-19  16:56:28          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

DDR0                              00000045
DDR1                              00000046
FSR                               00000004
GPR                               00000007
INDF                              00000000
INTECON                           0000000E
INTEFLAG                          0000000F
KBIM                              00000009
MCR                               00000008
ODCON                             0000000C
P0                                00000005
P1                                00000006
P5IOC                             00000045
P6IOC                             00000046
PCL                               00000002
PCLATH                            0000000A
PDCON                             0000000B
PR0                               00000000
PR1                               00000001
PR2                               00000002
PTA                               00000003
PUCON                             0000000D
R0                                00000007
STATUS                            00000003
T0CNT                             00000001
T0CR                              00000041
T0CS                              00000005
T0DATA                            00000041
T0SE                              00000004
T1CNT                             0000004D
T1CR                              0000004C
T1DATA                            0000004F
T1LOAD                            0000004E
TMCR                              0000004B
_BOR_15                           00003FF8
_BOR_18                           00003FF9
_BOR_20                           00003FFA
_BOR_22                           00003FFB
_BOR_24                           00003FFC
_BOR_26                           00003FFD
_BOR_36                           00003FFF
_CONFIG1                          00002000
_CONFIG2                          00002001
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_FCPU_2T                          00003F7F
_FCPU_4T                          00003FFF
_FOSC_1M                          00003FCF
_FOSC_2M                          00003FDF
_FOSC_32K                         00003F9F
_FOSC_455K                        00003FAF
_FOSC_4M                          00003FEF
_FOSC_500K                        00003FBF
_FOSC_62P5K                       00003F8F
_FOSC_8M                          00003FFF
_MCLR_OFF                         00003FF7
_MCLR_ON                          00003FFF
_MCU_EMC                          00003BFF
_MCU_FEL                          00003FFF
_OSCM_HS                          00003FFF
_OSCM_IRC                         000037FF
_OSCM_LP                          00003FFF
_RDPORT_PIN                       00003FFF
_RDPORT_REG                       00003EFF
_ROTP_100N                        00001FFF
_ROTP_200N                        00002FFF
_ROTP_300N                        00000FFF
_ROTP_HALFCPU                     00003FFF
_SMT_OFF                          00003DFF
_SMT_ON                           00003EFF
_TWDT_18_18                       00003FFF
_TWDT_288_288                     00003DFF
_TWDT_4P5_4P5                     00003EFF
_TWDT_72_72                       00003CFF
_TWDT_P140_18                     00003BFF
_TWDT_P140_288                    000039FF
_TWDT_P140_4P5                    00003AFF
_TWDT_P140_72                     000038FF
_WDT_OFF                          000037FF
_WDT_ON                           00003FFF
__30P01A                          00000001
acc_temp                          00000000
clr_key1_bak                      00000069
clr_key2_bak                      00000071
clr_key3_bak                      00000079
clr_ram                           00000029
clr_ram_loop                      00000038
dis_buffer0                       0000000E
dis_buffer1                       0000000F
dis_buffer2                       00000010
dis_buffer3                       00000011
display                           0000007D
end_display                       00000095
end_just_int                      0000001E
end_key_deal                      0000007B
end_key_scan                      0000007A
end_time0_interrupt               00000018
end_time_deal                     00000061
end_tm_1628_read                  000000A3
end_tm_1628_write                 000000BF
end_work_deal                     0000007C
error_flag                        00000006
exit_interrupt                    00000022
interrupt_sub                     00000008
just_int0                         00000018
just_kbim                         0000001B
key_data_buffer0                  0000001A
key_data_buffer1                  0000001B
key_data_buffer2                  0000001C
key_data_buffer3                  0000001D
key_data_buffer4                  0000001E
key_deal                          0000007B
key_scan                          00000062
load_table_loop                   0000007E
main_loop                         00000054
r1                                00000002
r2                                00000003
ram_error                         00000046
scan_key1                         00000062
scan_key2                         0000006A
scan_key3                         00000072
send_display_buffer               000000B2
start                             00000026
start_just_int                    0000000B
status_temp                       00000001
sys_init                          00000048
table                             000000E2
table_dis_code                    000003FE
time_100ms                        0000000A
time_10ms                         00000009
time_125us                        00000007
time_1hour                        0000000D
time_1min                         0000000C
time_1ms                          00000008
time_1s                           0000000B
time_deal                         0000005D
tm1628_clk_rising                 000000C8
tm1628_read_key_loop              0000009D
tm1628_receive_data_loop          000000D6
tm1628_send_data_loop             000000C4
tm_1628_read                      000000D2
tm_1628_read_sub                  00000096
tm_1628_write                     000000C0
tm_1628_write_sub                 000000A4
tm_data0                          00000012
tm_data1                          00000013
tm_data2                          00000014
tm_data3                          00000015
tm_data4                          00000016
tm_data5                          00000017
tm_data6                          00000018
tm_data7                          00000019
work_deal                         0000007C
work_flag1                        00000004
work_flag2                        00000005
BUZOUT                            T1CR,5
C                                 STATUS,0
DC                                STATUS,1
EIS                               MCR,6
FIR_RAM_ADDR                      0x10
GIE                               INTECON,7
GPR0                              STATUS,5
GPR1                              STATUS,6
INT0IE                            INTECON,2
INT0IF                            INTF,2
INT0M                             T0CR,6
INTE                              INTECON
INTF                              INTEFLAG
IO_TM1628_CLK                     P0,1
IO_TM1628_DATA                    P0,2
IO_TM1628_DDR                     DDR0,2
IO_TM1628_STB                     P0,0
KBIE                              INTECON,1
KBIF                              INTF,1
PD                                STATUS,3
PWMOUT                            T1CR,6
RAM_COUNT                         48
RAM_E                             0x00
RST                               STATUS,7
T0IE                              INTECON,0
T0IF                              INTF,0
T1IE                              TMCR,1
T1IF                              TMCR,0
TBS                               TMCR,7
TMR1EN                            T1CR,7
TO                                STATUS,4
WDTEN                             MCR,7
Z                                 STATUS,2
dis_buffer4                       tm_data4
dis_buffer5                       tm_data5
dis_buffer6                       tm_data6
dis_buffer7                       tm_data7
disp0_point                       tm_data0,4
disp1_point                       tm_data1,4
disp2_point                       tm_data2,4
disp3_point                       tm_data3,4
flag_disp0_point                  work_flag2,0
flag_disp1_point                  work_flag2,1
flag_disp2_point                  work_flag2,2
flag_disp3_point                  work_flag2,3
flag_key1_effect                  work_flag1,1
flag_key1_effect_bak              work_flag1,4
flag_key2_effect                  work_flag1,2
flag_key2_effect_bak              work_flag1,5
flag_key3_effect                  work_flag1,3
flag_key3_effect_bak              work_flag1,6
flag_time_10ms                    work_flag1,0
key_data1                         key_data_buffer0,0
key_data2                         key_data_buffer0,3
key_data3                         key_data_buffer3,0

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

